{"version":3,"sources":["serviceWorker.js","actions/index.js","reducers/navMenuFilter.js","reducers/locals.js","reducers/index.js","components/NavMenuLink.js","container/NavMenuFilterLink.js","components/Header.js","components/MainLeft.js","components/CommonPagination.js","components/ListItemLink.js","container/LocalItermFilterLink.js","components/CommonList.js","components/LocalSearchList.js","components/PopLocalKeywordList.js","components/LocalSearchHistoryList.js","container/NavMenu.js","components/LocalSearchDetail.js","components/MainRight.js","container/LocalItem.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","NavMenuFilters","ListItemFilters","navMenuFilter","state","arguments","length","undefined","filter","action","type","Object","assign","locals","obj","combineReducers","NavMenuLink","_ref","children","onClick","react_default","a","createElement","NavLink_default","connect","ownProps","active","dispatch","Header","Navbar","bg","variant","Brand","href","Nav","className","NavMenuFilterLink","Component","MainLeft","view","CommonPagination","_this","this","props","keyword","pageNumber","totalPage","endPagination","pageArr","i","push","hidden","Pagination_default","First","bind","Prev","Ellipsis","map","page","Item","Next","Last","defaultProps","ListItemLink","ListGroupItem_default","CommonList","_this$props","list","pageOnClick","style","height","ListGroup_default","content","LocalItermFilterLink","str","components_CommonPagination","listItemClickable","LocalSearchList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleButtonOnClick","requestLocalSearch","alert","axios","get","params","user_id","y","x","size","then","response","data","documents","document","place_name","total_page","setState","catch","error","finally","handleFormControlOnChange","e","target","value","_this$state","innerHeight","Form_default","inline","FormControl","placeholder","onChange","Button_default","components_CommonList","listItemFilter","PopLocalKeywordList","requestPopLocalSearchKeyword","limit","sum_count","LocalSearchHistoryList","requestLocalSearchHistories","updated_at","object","components_LocalSearchList","components_PopLocalKeywordList","components_LocalSearchHistoryList","Error","LocalSearchDetail","Jumbotron_default","keys","phone","address_name","road_address_name","MainRight","components_LocalSearchDetail","App","components_Header","NavMenu","LocalItem","store","createStore","rootReducer","ReactDOM","render","es","react_router_dom","react_router","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ba7b3c7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const setNavMenuFilter = filter => ({\n  type: 'SET_NAV_FILTER',\n  filter\n})\n\nexport const NavMenuFilters = {\n  NAV_SEARCH: 'NAV_SEARCH',\n  NAV_POP: 'NAV_POP',\n  NAV_HISTORY: 'NAV_HISTORY'\n}\n\nexport const setLocalDetail = obj => ({\n  type: 'SET_LOCAL_DETAIL',\n  obj\n})\n\nexport const ListItemFilters = {\n  ITEM_LOCAL_SEARCH: 'ITEM_LOCAL_SEARCH'\n}","import { NavMenuFilters  } from '../actions'\n\nconst navMenuFilter = (state = {filter: NavMenuFilters.NAV_SEARCH}, action) => {\n  switch (action.type) {\n    case 'SET_NAV_FILTER':\n      return Object.assign({}, state, {\n        filter: action.filter\n      });\n    default:\n      return state\n  }\n}\n\nexport default navMenuFilter","const locals = (state = { obj: {} }, action) => {\n  switch (action.type) {\n    case 'SET_LOCAL_DETAIL':\n      return Object.assign({}, state, {\n        obj: action.obj\n      });\n    default:\n      return state\n  }\n}\n\nexport default locals","import { combineReducers } from 'redux'\nimport navMenuFilter from './navMenuFilter'\nimport locals from './locals';\n\nexport default combineReducers({\n  locals,\n  navMenuFilter,\n})","import React from 'react'\nimport PropTypes from 'prop-types'\nimport NavLink from 'react-bootstrap/NavLink';\n\nconst NavMenuLink = ({ children, onClick }) => (\n  <NavLink onClick={onClick} >\n    {children}\n  </NavLink>\n)\n\nNavMenuLink.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default NavMenuLink","import { connect } from 'react-redux'\nimport { setNavMenuFilter } from '../actions'\nimport NavMenuLink from '../components/NavMenuLink'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.navMenuFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setNavMenuFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavMenuLink)","import React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { NavMenuFilters } from '../actions'\nimport FilterLink from '../container/NavMenuFilterLink';\n\nclass Header extends Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#\">로컬 검색 페이지</Navbar.Brand>\n        <Nav className=\"main\">\n          <FilterLink filter={NavMenuFilters.NAV_SEARCH}>로컬 검색</FilterLink>\n          <FilterLink filter={NavMenuFilters.NAV_HISTORY}>로컬 히스토리 목록</FilterLink>\n          <FilterLink filter={NavMenuFilters.NAV_POP}>인기 키워드 목록</FilterLink>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react'\n\nconst MainLeft = ({view}) => (\n  <div className=\"main-left\">\n    {view}\n  </div>\n)\n\nexport default MainLeft\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'react-bootstrap/Pagination';\n\nclass CommonPagination extends Component {\n  static propTypes = {\n    onClick: PropTypes.func,\n    keyword: PropTypes.string,\n    pageNumber: PropTypes.number,\n    totalPage: PropTypes.number\n  };\n\n  static defaultProps = {\n    page: 1,\n    totalPage: 1\n  };\n\n\n  render() {\n\n    let onClick = this.props.onClick;\n    let keyword = this.props.keyword;\n    let pageNumber = this.props.pageNumber;\n    let totalPage = this.props.totalPage;\n\n    let startPagination = (pageNumber - 4) > 0 ? (pageNumber - 4) : 1;\n    let endPagination = (totalPage < 6 || (pageNumber + 4) >= totalPage) ? totalPage : (pageNumber + 4);\n\n    let pageArr = [];\n    for (let i = startPagination; i <= endPagination; i++) {\n      pageArr.push(i);\n    }\n\n    return (\n      <div className=\"text-center\" hidden={pageArr.length === 1}>\n        <Pagination>\n          {\n            pageNumber > 1 ?\n              <Pagination.First onClick={onClick ? onClick.bind(this, keyword, 1) : undefined}/>\n              : \"\"\n          }\n          {\n            pageNumber > 1 ?\n              <Pagination.Prev onClick={onClick ? onClick.bind(this, keyword, (pageNumber - 1)) : undefined}/>\n              : \"\"\n          }\n          {\n            pageNumber > 5 ?\n              <Pagination.Ellipsis />\n              : \"\"\n          }\n          {\n            pageArr.map((page) =>\n              <Pagination.Item onClick={onClick ? onClick.bind(this, keyword, page)  : undefined} active={page == pageNumber}>{page}</Pagination.Item>\n            )\n          }\n          {\n            (pageNumber + 4) < totalPage ?\n              <Pagination.Ellipsis />\n              : \"\"\n          }\n          {\n            pageNumber < totalPage ?\n              <Pagination.Next onClick={onClick ? onClick.bind(this, keyword, (pageNumber + 1)) : undefined}/>\n              : \"\"\n          }\n          {\n            pageNumber < totalPage ?\n              <Pagination.Last onClick={onClick ? onClick.bind(this, keyword, totalPage) : undefined}/>\n              : \"\"\n          }\n        </Pagination>\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default CommonPagination;\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\nconst ListItemLink = ({ children, onClick }) => (\n  <ListGroupItem onClick={onClick} >\n    {children}\n  </ListGroupItem>\n)\n\nListItemLink.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default ListItemLink","import { connect } from 'react-redux'\nimport { setLocalDetail } from '../actions'\nimport ListItemLink from '../components/ListItemLink';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setLocalDetail(ownProps.obj))\n})\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(ListItemLink)","import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport CommonPagination from './CommonPagination';\nimport FilterLink from '../container/LocalItermFilterLink';\n\n\nclass CommonList extends Component {\n\n  static defaultProps = {\n    list: [],\n    listItemClickable: false,\n  };\n\n  render() {\n    const { pageNumber, totalPage, keyword, list, pageOnClick } = this.props;\n    // console.log(this.props);\n    return (\n      <div style={{ height: '500px' }}>\n        <ListGroup>\n          {\n            list.map((content) =>\n              <FilterLink obj={content.obj}>\n                {content.str}\n              </FilterLink>\n            )\n          }\n        </ListGroup>\n\n        <CommonPagination\n          keyword={keyword}\n          pageNumber={pageNumber}\n          totalPage={totalPage}\n          onClick={pageOnClick} />\n      </div>\n    );\n  }\n}\n\nexport default CommonList;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/es/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport CommonList from './CommonList';\nimport axios from 'axios';\nimport { ListItemFilters } from '../actions';\n\nclass LocalSearchList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n      pageNumber: 1,\n      totalPage: 1,\n      list: []\n    };\n  }\n\n  render() {\n\n    const { keyword, pageNumber, totalPage, list } = this.state;\n\n    return (\n      <div style={{ height: window.innerHeight + 'px' }}>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"장소 키워드를 입력해주세요.\" className=\"mr-sm-3\" value={keyword} onChange={this.handleFormControlOnChange} />\n          <Button onClick={this.handleButtonOnClick}>Search</Button>\n        </Form>\n\n        <CommonList\n          keyword={keyword}\n          pageNumber={pageNumber}\n          totalPage={totalPage}\n          list={list}\n          pageOnClick={this.requestLocalSearch}\n          listItemClickable={true}\n          listItemFilter={ListItemFilters.ITEM_LOCAL_SEARCH}\n        />\n\n      </div>\n    );\n  }\n\n  handleButtonOnClick = () => {\n\n    const { keyword } = this.state;\n\n    if (keyword === undefined || keyword === \"\") {\n      alert(\"장소 키워드를 입력해주세요.\");\n      return;\n    }\n\n    this.requestLocalSearch(keyword, 1)\n\n  }\n\n  requestLocalSearch = (keyword, page) => {\n    axios.get('/local/search', {\n      params: {\n        user_id: 2,\n        y: 37.514322572335,\n        x: 127.06283102249932,\n        keyword,\n        page,\n        size: 15\n      }\n    })\n      .then((response) => {\n\n        let list = [];\n        let pageNumber = page;\n        let totalPage = 1;\n        if (response.data) {\n          if (response.data.documents) {\n            list = response.data.documents.map((document) => ({\n              str: document.place_name,\n              obj: document\n            }))\n          }\n\n          totalPage = response.data.total_page;\n        }\n\n        this.setState({\n          list, pageNumber, totalPage\n        })\n      })\n      .catch((error) => {\n        // console.log(error);\n      })\n      .finally(() => {\n        // always executed\n      });\n  };\n\n  handleFormControlOnChange = (e) => {\n    let { keyword } = this.state;\n    keyword = e.target.value;\n    this.setState({ keyword })\n  }\n\n}\n\nexport default LocalSearchList;\n\n\n","import React, { Component } from 'react';\nimport CommonList from './CommonList';\nimport axios from 'axios';\n\nclass PopLocalKeywordList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n  }\n\n  componentWillMount() {\n    this.requestPopLocalSearchKeyword();\n  }\n\n  render() {\n\n    const { list } = this.state;\n\n\n    return (\n      <div style={{height:  window.innerHeight + 'px'}}>\n\n        <CommonList list={list} />\n\n      </div>\n    );\n  }\n\n  requestPopLocalSearchKeyword = () => {\n    axios.get('/api/local/search/histories/pop/keyword', {\n      params: {\n        user_id: 2,\n        limit: 10\n      }\n    })\n      .then((response) => {\n\n        let list = [];\n        if (response.data) {\n          list = response.data.map((content) => ({\n            str: content.keyword + \"(\" + content.sum_count + \")\",\n            obj: content\n          }))\n        }\n\n        this.setState({\n          list\n        })\n      })\n      .catch((error) => {\n        // console.log(error);\n      })\n      .finally(() => {\n        // always executed\n      });\n  };\n\n}\n\nexport default PopLocalKeywordList;","import React, { Component } from 'react';\nimport CommonList from './CommonList';\nimport axios from 'axios';\n\nclass LocalSearchHistoryList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n  }\n\n  componentWillMount() {\n    this.requestLocalSearchHistories();\n  }\n\n  render() {\n\n    const { list } = this.state;\n\n\n    return (\n      <div style={{height:  window.innerHeight + 'px'}}>\n\n        <CommonList list={list} />\n\n      </div>\n    );\n  }\n\n  requestLocalSearchHistories = () => {\n    axios.get('/api/local/search/histories', {\n      params: {\n        user_id: 2,\n        limit: 10\n      }\n    })\n      .then((response) => {\n\n        let list = [];\n        if (response.data) {\n          list = response.data.map((content) => ({\n            str: content.keyword + \" / \" + content.updated_at,\n            obj: content\n          }))\n\n        }\n\n        this.setState({\n          list\n        })\n      })\n      .catch((error) => {\n        // console.log(error);\n      })\n      .finally(() => {\n        // always executed\n      });\n  };\n\n}\n\nexport default LocalSearchHistoryList;","import React from 'react';\n\nimport { connect } from 'react-redux'\nimport { NavMenuFilters } from '../actions'\n\nimport MainLeft from '../components/MainLeft';\nimport LocalSearchList from '../components/LocalSearchList';\nimport PopLocalKeywordList from '../components/PopLocalKeywordList';\nimport LocalSearchHistoryList from '../components/LocalSearchHistoryList';\n\nconst get = (object) => {\n  switch (object.filter) {\n    case NavMenuFilters.NAV_SEARCH:\n    return <LocalSearchList />\n    case NavMenuFilters.NAV_POP:\n      return <PopLocalKeywordList />\n    case NavMenuFilters.NAV_HISTORY:\n      return <LocalSearchHistoryList />\n    default:\n      throw new Error('Unknown filter: ' + object.filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  view: get(state.navMenuFilter)\n});\n\nexport default connect(\n  mapStateToProps\n)(MainLeft)","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nclass LocalSearchDetail extends Component {\n  render() {\n\n    const { obj } = this.props;\n\n    return (\n      <div>\n        <Jumbotron>\n          <h1>상세 정보</h1>\n          {\n            Object.keys(obj).length === 0 ?\n              <p>\n                선택된 내용이 없습니다.\n              </p>\n              : \"\"\n          }\n          <p>\n            장소 : {obj.place_name ? obj.place_name : \"-\"}\n          </p>\n          <p>\n            전화 번호 : {obj.phone ? obj.phone : \"-\"}\n          </p>\n          <p>\n            지번 주소 : {obj.address_name ? obj.address_name : \"-\"}\n          </p>\n          <p>\n            도로명 주소 : {obj.road_address_name ? obj.road_address_name : \"-\"}\n          </p>\n          <a target={\"_blank\"} href={\"https://map.kakao.com/link/map/\" + obj.y + \",\" + obj.x}>지도 바로 가기</a>\n        </Jumbotron>\n      </div>\n    );\n  }\n\n}\n\nexport default LocalSearchDetail;","import React from 'react'\nimport LocalSearchDetail from './LocalSearchDetail';\n\nconst MainRight = (state) => {\n  return (\n    <div className=\"main-right\">\n      <LocalSearchDetail obj={state.obj}/>\n    </div>\n  )\n}\n\nexport default MainRight\n","import { connect } from 'react-redux';\n\nimport MainRight from '../components/MainRight';\n\nconst get = (object) => {\n  return object.obj;\n}\n\nconst mapStateToProps = state => ({\n  obj: get(state.locals)\n});\n\nexport default connect(\n  mapStateToProps\n)(MainRight)","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap/dist/react-bootstrap.min';\nimport NavMenu from './container/NavMenu';\nimport LocalItem from './container/LocalItem';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <div className=\"main\">\n        <NavMenu />\n        <LocalItem />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport App from './App';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path=\"/view\" component={App}/>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}