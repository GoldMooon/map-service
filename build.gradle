plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'

//create a single Jar with all dependencies
jar {
    baseName = "map-service"
    version = "0.0.1-SNAPSHOT"
    manifest {
        attributes 'Title': 'map-service',
                   'Version': 1.0,
                   'Main-Class': 'com.goldmoon.CodingTestApplication'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

group = 'com.goldmoon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def queryDSLVersion = '4.2.1'
def generated = "src/main/generated"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.0'

	implementation 'org.slf4j:slf4j-api:1.7.25'
	implementation 'org.projectlombok:lombok:1.16.16'
	implementation 'org.apache.httpcomponents:httpclient:4.5.5'


	implementation 'org.hibernate:hibernate-entitymanager:5.2.10.Final'

	implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//runtime 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDSLVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDSLVersion}"
	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
			"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
			"javax.annotation:javax.annotation-api:1.3.2",
			"org.projectlombok:lombok"
	)
}

sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}


task copyTask(type: Copy){
	from "./web/build"
	into "./src/main/resources/static"
	println "copy into ./src/main/resources/static from ./web/build"
}

task cleanResourcesTask(type: Delete) {
	delete "./src/main/resources/static"
	println "./src/main/resources/static"
}

task buildScriptTask(type: Exec) {
	commandLine 'sh', 'buildScript.sh'
}